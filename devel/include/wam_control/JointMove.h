// Generated by gencpp from file wam_control/JointMove.msg
// DO NOT EDIT!


#ifndef WAM_CONTROL_MESSAGE_JOINTMOVE_H
#define WAM_CONTROL_MESSAGE_JOINTMOVE_H

#include <ros/service_traits.h>


#include <wam_control/JointMoveRequest.h>
#include <wam_control/JointMoveResponse.h>


namespace wam_control
{

struct JointMove
{

typedef JointMoveRequest Request;
typedef JointMoveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct JointMove
} // namespace wam_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::wam_control::JointMove > {
  static const char* value()
  {
    return "e2a0e438b445b98def0f0ba6a2a85f58";
  }

  static const char* value(const ::wam_control::JointMove&) { return value(); }
};

template<>
struct DataType< ::wam_control::JointMove > {
  static const char* value()
  {
    return "wam_control/JointMove";
  }

  static const char* value(const ::wam_control::JointMove&) { return value(); }
};


// service_traits::MD5Sum< ::wam_control::JointMoveRequest> should match 
// service_traits::MD5Sum< ::wam_control::JointMove > 
template<>
struct MD5Sum< ::wam_control::JointMoveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::wam_control::JointMove >::value();
  }
  static const char* value(const ::wam_control::JointMoveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_control::JointMoveRequest> should match 
// service_traits::DataType< ::wam_control::JointMove > 
template<>
struct DataType< ::wam_control::JointMoveRequest>
{
  static const char* value()
  {
    return DataType< ::wam_control::JointMove >::value();
  }
  static const char* value(const ::wam_control::JointMoveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::wam_control::JointMoveResponse> should match 
// service_traits::MD5Sum< ::wam_control::JointMove > 
template<>
struct MD5Sum< ::wam_control::JointMoveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::wam_control::JointMove >::value();
  }
  static const char* value(const ::wam_control::JointMoveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_control::JointMoveResponse> should match 
// service_traits::DataType< ::wam_control::JointMove > 
template<>
struct DataType< ::wam_control::JointMoveResponse>
{
  static const char* value()
  {
    return DataType< ::wam_control::JointMove >::value();
  }
  static const char* value(const ::wam_control::JointMoveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WAM_CONTROL_MESSAGE_JOINTMOVE_H
